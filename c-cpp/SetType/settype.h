// Class automatically generated by Dev-C++ New Class wizard

#ifndef SETTYPE_H
#define SETTYPE_H

#include <stdlib.h>
#include <string.h>
#include <iostream>

// This is a class to implement the concept of a set as outlined in my computer 
// theory class
class SetType
{
	public:
		// class constructor. The argument must be a __null-terminated__
		// array of characters. (a C-style string)
		SetType(char[]);
		
		// Prints out the elements of s seperated by commas, and followed with
		// a newline.
		void write();
		
		// Returns true if s is empty
		bool is_empty();
		
		// IN: character to search s for.
		// OUT: true if s was found, false otherwise
		bool is_member(char);
		
		// IN: C-style string to search s for
		// OUT: true if all elements of the argument were found, false
		//      otherwise
		bool is_subset(char[]);
		
		// IN: C-style string to test against s for equality
		// OUT: true if argument = s
		bool is_equal(char[]);
		
		// IN: Two C-style strings, the first one containing the set to unite
		//     with s, the second one to contain the union (must be empty)
		void setunion(char[], char[]);
		
		// IN: Two C-style strings, the first one containing the set to
		//     intersect with s, the second one to contain the intersection
		//     (must be empty)
		void intersection(char[], char[]);
		
		// IN: Two C-style strings, the first one containing the set to
        //     subtract from s, the second one to contain the difference (must
        //     be empty)
		void difference(char[], char[]);

		// unused destructor
		~SetType();
	
	private:
	    // representation of a set as a C-style string
	    char* s;
	    
	    //boolean true iff the set s is empty
	    bool empty;
	    
	    //size of s; equivalent to strlen(s)
	    int setSize;
};

#endif // SETTYPE_H

