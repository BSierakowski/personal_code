Code
#keywords python
#time 10-30-06 23:14
<h1>Backup Del.icio.us to gmail</h1>
Some time ago, I wrote a <a 
href="http://www.vim.org/htmldoc/change.html#auto-format">script</a> to grab 
your del.icio.us bookmarks, grab the corresponding web page, and email them to 
your gmail account. Once there, you have the full text of your searchable 
bookmarks. It was the most popular script at my old site, but I had yet to 
repost to this new site.

<p><h1>Cherry Blossom</h1>
<p>I used to use <a href="http://pyblosxom.sourceforge.net/">Pyblosxom</a> to 
run my blog. Its extreme simplicity, ease of setup, and large number of plugins 
was appealing to me. However, it's a CGI app, which means it's slow, and it 
doesn't give you any help with cookies, forms, authentication, etc, etc.
<p>Thus, I set out to write a blog server inspired by Pyblosxom, but which used 
a modern framework. Thus was born <a 
href="http://billmill.org:9561/cherry_blossom">Cherry Blossom</a>, the code 
which currently runs this site. Since I was a developer on Pyblosxom, I can 
tell you that it has an extremely similar design, modified in places where I 
thought it could use updating. It should parse Pyblosxom blog entries without 
any changes.

<p><h1>Reportlab PDF Calendar Generator</h1>
<p>The title's pretty self-explanatory. The code's described further <a 
href="http://billmill.org/calendar">here</a>.

<p><h1>ELO Ranking Generator</h1>
<p>I wrote some code to generate an ELO ranking for each of the teams in my <a 
href="http://www.whatisultimate.com/what/what_game_en.html">ultimate</a> 
frisbee summer league. It's described in further detail <a 
href="http://billmill.org/elo_ratings">here</a>.


<p><h1>The Redecorator</h1>
<p>I was pissed off when Guido added decorators to Python. I thought they were 
unnecessary syntactic sugar which were starting us on the road to Perl-like 
TMTOWTDI. My stance has softened a bit since (I use the @expose decorator in 
Cherry Blossom, but I still am very hesitant to use other decorators), but at 
the time I was furious.
<p>In response, I wrote my most controversial piece of code ever, <a 
href="http://billmill.org/redecorator">The redecorator</a>. It simply parses a 
python file and turns all decorators into the equivalent assignment statement 
after the end of the method. Utterly useless, but it was a fun state machine to 
write.
<p>There were a lot of comments on it at the time - I responded to them <a 
href="http://billmill.org/redec_response">here</a>.

<p><h1>Illinois Number</h1>
<p>In 2005, Illinois only lost one regular season basketball game. Somebody 
pointed out that the worst team in basketball had beaten them, transitively, 
through 7 teams. I wanted to know if every team had "beaten" illinois in the 
same way that year, so I <a href="http://billmill.org/illinois">found out</a>.

<p><h1>Personal Code</h1>
Most code not significant enough to fit in any of these categories can be found 
at the <a href="http://billmill.org:9561/personal_code">trac</a> I've set up 
for my personal code. The only reason you'd want to look in there is that it's 
fun to ogle other people's code. Remember also that some of that code is old - 
don't judge me on it unless you like it.
